/*
 * WARNING: do not edit!
 * Generated by crypto/store/charmap.pl
 *
 * Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the OpenSSL license (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */

#define CHARTYPE_ALPHA          1
#define CHARTYPE_DIGIT          2
#define CHARTYPE_HEXDIG         4
#define CHARTYPE_unreserved     8
#define CHARTYPE_reserved       48
#define CHARTYPE_gen_delims     16
#define CHARTYPE_sub_delims     32

#define is_valid(c)             ((unsigned char)(c) < 128)
#define is_type(c,t)            ((char_type[(size_t)(c)] & (t)) != 0)
#define is_ALPHA(c)             (is_type((c), CHARTYPE_ALPHA))
#define is_DIGIT(c)             (is_type((c), CHARTYPE_DIGIT))
#define is_HEXDIG(c)            (is_type((c), CHARTYPE_HEXDIG))
#define is_unreserved(c)        (is_type((c), CHARTYPE_unreserved))
#define is_reserved(c)          (is_type((c), CHARTYPE_reserved))
#define is_gen_delims(c)        (is_type((c), CHARTYPE_gen_delims))
#define is_sub_delims(c)        (is_type((c), CHARTYPE_sub_delims))

/*
 * Mask of various character properties
 */

static const unsigned short char_type[] = {
       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       0,    0,    0,    0,    0,    0,    0,    0,    0,   32,    0,   16,
      32,    0,   32,   32,   32,   32,   32,   32,   32,    8,    8,   16,
      14,   14,   14,   14,   14,   14,   14,   14,   14,   14,   16,   32,
       0,   32,    0,   16,   16,   13,   13,   13,   13,   13,   13,    9,
       9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
       9,    9,    9,    9,    9,    9,    9,   16,    0,   16,    0,    8,
       0,   13,   13,   13,   13,   13,   13,    9,    9,    9,    9,    9,
       9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
       9,    9,    9,    0,    0,    0,    8,    0
};
